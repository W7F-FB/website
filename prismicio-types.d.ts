// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PickContentRelationshipFieldData<
  TRelationship extends
    | prismic.CustomTypeModelFetchCustomTypeLevel1
    | prismic.CustomTypeModelFetchCustomTypeLevel2
    | prismic.CustomTypeModelFetchGroupLevel1
    | prismic.CustomTypeModelFetchGroupLevel2,
  TData extends Record<
    string,
    | prismic.AnyRegularField
    | prismic.GroupField
    | prismic.NestedGroupField
    | prismic.SliceZone
  >,
  TLang extends string,
> =
  // Content relationship fields
  {
    [TSubRelationship in Extract<
      TRelationship["fields"][number],
      prismic.CustomTypeModelFetchContentRelationshipLevel1
    > as TSubRelationship["id"]]: ContentRelationshipFieldWithData<
      TSubRelationship["customtypes"],
      TLang
    >;
  } & // Group
  {
    [TGroup in Extract<
      TRelationship["fields"][number],
      | prismic.CustomTypeModelFetchGroupLevel1
      | prismic.CustomTypeModelFetchGroupLevel2
    > as TGroup["id"]]: TData[TGroup["id"]] extends prismic.GroupField<
      infer TGroupData
    >
      ? prismic.GroupField<
          PickContentRelationshipFieldData<TGroup, TGroupData, TLang>
        >
      : never;
  } & // Other fields
  {
    [TFieldKey in Extract<
      TRelationship["fields"][number],
      string
    >]: TFieldKey extends keyof TData ? TData[TFieldKey] : never;
  };

type ContentRelationshipFieldWithData<
  TCustomType extends
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel1 | string)[]
    | readonly (prismic.CustomTypeModelFetchCustomTypeLevel2 | string)[],
  TLang extends string = string,
> = {
  [ID in Exclude<
    TCustomType[number],
    string
  >["id"]]: prismic.ContentRelationshipField<
    ID,
    TLang,
    PickContentRelationshipFieldData<
      Extract<TCustomType[number], { id: ID }>,
      Extract<prismic.Content.AllDocumentTypes, { type: ID }>["data"],
      TLang
    >
  >;
}[Exclude<TCustomType[number], string>["id"]];

/**
 * Content for blog documents
 */
interface BlogDocumentData {
  /**
   * title field in *blog*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Blog title
   * - **API ID Path**: blog.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * image field in *blog*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: blog.image
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;

  /**
   * category field in *blog*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: blog.category
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  category: prismic.SelectField<
    | "Announcements"
    | "Tournament Recap"
    | "Match Recap"
    | "Social Impact"
    | "Match Day Preview"
  >;

  /**
   * date field in *blog*
   *
   * - **Field Type**: Date
   * - **Placeholder**: *None*
   * - **API ID Path**: blog.date
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/date
   */
  date: prismic.DateField;

  /**
   * author field in *blog*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: blog.author
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  author: prismic.KeyTextField;

  /**
   * excerpt field in *blog*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: blog.excerpt
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  excerpt: prismic.KeyTextField;

  /**
   * content field in *blog*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: blog.content
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  content: prismic.RichTextField;
}

/**
 * blog document from Prismic
 *
 * - **API ID**: `blog`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type BlogDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<BlogDocumentData>, "blog", Lang>;

/**
 * Content for Image with text documents
 */
interface ImageWithTextDocumentData {
  /**
   * heading field in *Image with text*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: image_with_text.heading
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  heading: prismic.KeyTextField;

  /**
   * title field in *Image with text*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: image_with_text.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * image field in *Image with text*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: image_with_text.image
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  image: prismic.ImageField<never>;

  /**
   * align image field in *Image with text*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: image_with_text.align_image
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  align_image: prismic.SelectField<"left" | "right">;

  /**
   * description field in *Image with text*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: image_with_text.description
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  description: prismic.RichTextField;
}

/**
 * Image with text document from Prismic
 *
 * - **API ID**: `image_with_text`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ImageWithTextDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<ImageWithTextDocumentData>,
    "image_with_text",
    Lang
  >;

/**
 * Content for Policy documents
 */
interface PolicyDocumentData {
  /**
   * Policy Name field in *Policy*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Policy name
   * - **API ID Path**: policy.name
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  name: prismic.KeyTextField;

  /**
   * Policy Content field in *Policy*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: policy.body
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  body: prismic.RichTextField /**
   * PDF File field in *Policy*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: Upload PDF file
   * - **API ID Path**: policy.pdf
   * - **Tab**: Settings
   * - **Documentation**: https://prismic.io/docs/fields/link-to-media
   */;
  pdf: prismic.LinkToMediaField<prismic.FieldState, never>;

  /**
   * Hide From Navigation field in *Policy*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: policy.hide_from_nav
   * - **Tab**: Settings
   * - **Documentation**: https://prismic.io/docs/fields/boolean
   */
  hide_from_nav: prismic.BooleanField;

  /**
   * Navigation Order field in *Policy*
   *
   * - **Field Type**: Number
   * - **Placeholder**: Order in navigation (lower numbers first)
   * - **API ID Path**: policy.order
   * - **Tab**: Settings
   * - **Documentation**: https://prismic.io/docs/fields/number
   */
  order: prismic.NumberField;
}

/**
 * Policy document from Prismic
 *
 * - **API ID**: `policy`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PolicyDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<PolicyDocumentData>, "policy", Lang>;

/**
 * Content for Team Member documents
 */
interface TeamMemberDocumentData {
  /**
   * Full Name field in *Team Member*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Team member's full name
   * - **API ID Path**: team_member.name
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  name: prismic.KeyTextField;

  /**
   * Role/Position field in *Team Member*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Job title or role
   * - **API ID Path**: team_member.role
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  role: prismic.KeyTextField;

  /**
   * Headshot field in *Team Member*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: team_member.headshot
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  headshot: prismic.ImageField<"small" | "medium">;

  /**
   * Biography field in *Team Member*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Team member's biography
   * - **API ID Path**: team_member.bio
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/rich-text
   */
  bio: prismic.RichTextField /**
   * Display Order field in *Team Member*
   *
   * - **Field Type**: Number
   * - **Placeholder**: Order on team page (lower numbers first)
   * - **API ID Path**: team_member.display_order
   * - **Tab**: Settings
   * - **Documentation**: https://prismic.io/docs/fields/number
   */;
  display_order: prismic.NumberField;

  /**
   * Department field in *Team Member*
   *
   * - **Field Type**: Select
   * - **Placeholder**: Select department
   * - **API ID Path**: team_member.department
   * - **Tab**: Settings
   * - **Documentation**: https://prismic.io/docs/fields/select
   */
  department: prismic.SelectField<
    "Player Advisor" | "Co-Founder" | "Leadership Team"
  >;
}

/**
 * Team Member document from Prismic
 *
 * - **API ID**: `team_member`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type TeamMemberDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<TeamMemberDocumentData>,
    "team_member",
    Lang
  >;

/**
 * Content for Tournament documents
 */
interface TournamentDocumentData {
  /**
   * Title field in *Tournament*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Tournament title
   * - **API ID Path**: tournament.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  title: prismic.KeyTextField;

  /**
   * Country Code field in *Tournament*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Two-letter country code (e.g., US, UK, FR)
   * - **API ID Path**: tournament.country_code
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  country_code: prismic.KeyTextField;

  /**
   * Start Date field in *Tournament*
   *
   * - **Field Type**: Date
   * - **Placeholder**: *None*
   * - **API ID Path**: tournament.start_date
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/date
   */
  start_date: prismic.DateField;

  /**
   * End Date field in *Tournament*
   *
   * - **Field Type**: Date
   * - **Placeholder**: *None*
   * - **API ID Path**: tournament.end_date
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/fields/date
   */
  end_date: prismic.DateField /**
   * Show in Navigation field in *Tournament*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: tournament.show_in_navigation
   * - **Tab**: Navigation
   * - **Documentation**: https://prismic.io/docs/fields/boolean
   */;
  show_in_navigation: prismic.BooleanField;

  /**
   * Navigation Order field in *Tournament*
   *
   * - **Field Type**: Number
   * - **Placeholder**: Order in navigation (lower numbers appear first)
   * - **API ID Path**: tournament.navigation_order
   * - **Tab**: Navigation
   * - **Documentation**: https://prismic.io/docs/fields/number
   */
  navigation_order: prismic.NumberField;

  /**
   * Navigation Image field in *Tournament*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: tournament.nav_image
   * - **Tab**: Navigation
   * - **Documentation**: https://prismic.io/docs/fields/image
   */
  nav_image: prismic.ImageField<never>;
}

/**
 * Tournament document from Prismic
 *
 * - **API ID**: `tournament`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type TournamentDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<TournamentDocumentData>,
    "tournament",
    Lang
  >;

/**
 * Item in *Website → Footer Menus → Menu Links*
 */
export interface WebsiteDocumentDataFooterMenusMenuLinksItem {
  /**
   * Link Text field in *Website → Footer Menus → Menu Links*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Link text
   * - **API ID Path**: website.footer_menus[].menu_links[].link_text
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  link_text: prismic.KeyTextField;

  /**
   * Link URL field in *Website → Footer Menus → Menu Links*
   *
   * - **Field Type**: Text
   * - **Placeholder**: URL or path
   * - **API ID Path**: website.footer_menus[].menu_links[].link_url
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  link_url: prismic.KeyTextField;

  /**
   * External Link field in *Website → Footer Menus → Menu Links*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: website.footer_menus[].menu_links[].is_external
   * - **Documentation**: https://prismic.io/docs/fields/boolean
   */
  is_external: prismic.BooleanField;
}

/**
 * Item in *Website → Footer Menus*
 */
export interface WebsiteDocumentDataFooterMenusItem {
  /**
   * Menu Title field in *Website → Footer Menus*
   *
   * - **Field Type**: Text
   * - **Placeholder**: Footer menu title
   * - **API ID Path**: website.footer_menus[].menu_title
   * - **Documentation**: https://prismic.io/docs/fields/text
   */
  menu_title: prismic.KeyTextField;

  /**
   * Menu Links field in *Website → Footer Menus*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: website.footer_menus[].menu_links[]
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  menu_links: prismic.NestedGroupField<
    Simplify<WebsiteDocumentDataFooterMenusMenuLinksItem>
  >;
}

/**
 * Content for Website documents
 */
interface WebsiteDocumentData {
  /**
   * Footer Menus field in *Website*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: website.footer_menus[]
   * - **Tab**: Footer
   * - **Documentation**: https://prismic.io/docs/fields/repeatable-group
   */
  footer_menus: prismic.GroupField<
    Simplify<WebsiteDocumentDataFooterMenusItem>
  >;
}

/**
 * Website document from Prismic
 *
 * - **API ID**: `website`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/content-modeling
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type WebsiteDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<WebsiteDocumentData>,
    "website",
    Lang
  >;

export type AllDocumentTypes =
  | BlogDocument
  | ImageWithTextDocument
  | PolicyDocument
  | TeamMemberDocument
  | TournamentDocument
  | WebsiteDocument;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      BlogDocument,
      BlogDocumentData,
      ImageWithTextDocument,
      ImageWithTextDocumentData,
      PolicyDocument,
      PolicyDocumentData,
      TeamMemberDocument,
      TeamMemberDocumentData,
      TournamentDocument,
      TournamentDocumentData,
      WebsiteDocument,
      WebsiteDocumentData,
      WebsiteDocumentDataFooterMenusMenuLinksItem,
      WebsiteDocumentDataFooterMenusItem,
      AllDocumentTypes,
    };
  }
}
